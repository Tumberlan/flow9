import string;
import ds/tree;

findIndexes(a : [int],i : int, k: int) -> [int] {
	if (i >= length(a)){
		[];
	}
	else if (a[i] == k) {
		concat([i], findIndexes(a, i+1, k));
	}
	else {
		findIndexes(a, i + 1, k);
	}
}

indexes(a: [int], m : int){
	tree = foldi(a, makeTree(), 
		\index, t, value -> 
		  setTree(t, value, arrayPush(getTreeArrayValue(t,value), index)));
	foldi(a, [], 
		\index,acc,value ->
		  concat(acc, map(getTreeArrayValue(tree, m-value), \x -> Pair(index, x))));
}

main(){
	arr = [12, 3, 4, 66, 11, 1, 3, 7];
	println(indexes(arr, 6));
	quit(0);
}