import string;
import ds/tree;

simpleIndexing(arr: [int], i: int, m: int){
	if(i > length(arr)){
		[]
	}else if (arr[i] == m) {
		concat([i], findIndexes(a, i+1, m));
	}
	else {
		simpleIndexing(arr, i + 1, m);
	}
}

myMap(arr: [int], m: int){
	map(arr, \index -> simpleIndexing(arr, index, m-index));
}

indexes(arr: [int], m : int){
	tree = foldi(arr, makeTree(), \index, t,
	 value -> setTree(t, value, arrayPush(getTreeArrayValue(t,value), index)));
	foldi(arr, [], \index, acc ,
	 value -> concat(acc, map(getTreeArrayValue(tree, m-value), \x -> Pair(index, x))));
}

main(){
	arr = [1,5,3,3,2,4];
	println(indexes(arr,6));
	println(myMap(arr,6));
	quit(0);
}