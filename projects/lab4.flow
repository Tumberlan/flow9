import string;
import ds/tree;

simpleIndexing(arr: [int], i: int, j: int, m: int){
	if(j >= length(arr)){
		if(i >= length(arr) - 1){
		} else {
		simpleIndexing(arr, i + 1, 0, m);
		}
	} else if (arr[i] + arr[j] == m) {
		println(Pair(i,j));
		simpleIndexing(arr, i, j + 1, m);
	} else {
		simpleIndexing(arr, i, j + 1, m);
	}
}

indexes(arr: [int], m : int){
	tree = foldi(arr, makeTree(), \index, t,
	 value -> setTree(t, value, arrayPush(getTreeArrayValue(t,value), index)));
	foldi(arr, [], \index, acc ,
	 value -> concat(acc, map(getTreeArrayValue(tree, m-value), \x -> Pair(index, x))));
}

main(){
	arr = [2,4,3,3,1,5];
	println(indexes(arr,3));
	simpleIndexing(arr,0,0,3);
	quit(0);
}